<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course.musicweb3.dao.SongMapper">
    <resultMap id="BaseResultMap" type="com.course.musicweb3.domain.Song">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="singerId" column="singer_id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="introduction" column="introduction" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="pic" column="pic" jdbcType="VARCHAR"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="ResultMapWithBlobs" type="com.course.musicweb3.domain.Song" extends="BaseResultMap">
        <result property="lyric" column="lyric" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, singer_id, name, introduction, create_time, update_time, pic, url
    </sql>

    <sql id="Blob_Column_List">
        id, singer_id, name, introduction, create_time, update_time, pic, lyric, url
    </sql>
    <insert id="insert" parameterType="com.course.musicweb3.domain.Song">
        insert into song(id, singer_id, name, introduction, create_time, update_time, pic, lyric, url)
        values(#{id},#{singerId},#{name},#{introduction},now(),now(),#{pic},#{lyric},#{url})
    </insert>
    <update id="update" parameterType="com.course.musicweb3.domain.Song">
        update song set
                        name=#{name},
                        singer_id=#{singerId},
                        introduction=#{introduction},
                        update_time=now(),
                        pic=#{pic},
                        lyric=#{lyric},
                        url=#{url}
        where id=#{id}
    </update>
    <delete id="delete" parameterType="java.lang.Integer">
        delete from song where id = #{id}
    </delete>
    <select id="allSong" resultMap="ResultMapWithBlobs">
        select <include refid="Base_Column_List"/> from song
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select <include refid="Blob_Column_List"/> from song where id = #{id}
    </select>
    <select id="songOfName" parameterType="java.lang.String" resultMap="ResultMapWithBlobs">
        select <include refid="Blob_Column_List"/> from song where name = #{name}
    </select>
    <select id="songOfSingerId" parameterType="java.lang.Integer" resultMap="ResultMapWithBlobs">
        select <include refid="Blob_Column_List"/>
        from song
        where singer_id=#{singerId}
    </select>
</mapper>